##
title = "AJAX Framework"
url = "/ajax"
layout = "default"

[resources]
less[] = "pages/ajax.less"
==
<?
function onTestSelector()
{
    return ['=[data-anyselector]' => 'Success <span>Should Be Red</span>'];
}
?>
==
<div class="container">
    <h1>AJAX Tests</h1>

    <!-- Testing Custom Selector -->
    <div data-anyselector id="customSelector">
        Content Will Go Here
    </div>

    <form>
        <input type="hidden" name="input" value="1">
        <a
            href="#"
            data-request="onTestSelector"
            data-request-success="$('#customSelector > span').css('color', 'red')"
            >Test Custom Selector</a>
    </form>

    <!-- Testing Data Object from jQuery -->
    <script>
        function getChecked() { return [1,2,3]; }
    </script>
    <form>
        <input type="hidden" name="models[test=1]" value="value" />
        <input type="hidden" name="input" value="1" />
        <a href="#"
        data-request="onAjax"
        onclick="$(this).data('request-data', { additional: getChecked() });"
        >Test Data Object</a>
    </form>

    <form>
        <input type="hidden" name="input" value="1">
        <a href="#"
            data-request="onAjax"
            onclick="console.log('clicked'); $(this).data('request-data', 'additional:1');"
        >Trigger Data String</a>
    </form>

    <form>
        <input type="hidden" name="input" value="1">
        <a href="#" id="target" data-request="onAjax"></a>

        <a href="javascript:runTest()">Trigger Click Event</a>
    </form>

    <script>
        function runTest() {
            console.log('Running Request');
            $('#target').data('request-data', 'additional:1').get(0).click();
        }
    </script>

    <form id="customEventForm">
        <input type="hidden" name="input" value="1">
        <a href="javascript:runCustomEvent()">Trigger Custom Event</a>
    </form>

    <script>
        function runCustomEvent() {
            console.log('Running Request');
            oc.request('#customEventForm', 'onAjax', { data: { additional: 1 } });
        }
    </script>
</div>
